package Gramatica;

import java.util.LinkedList;

public class Principal
{
	private DatosIDS dat;
	private Datos obd = new Datos();
	private ValidacionPrio val = new ValidacionPrio();
	private CodigoInter codInter = new CodigoInter();
	/*private AnalisisAsiganacion anaAsig = new AnalisisAsiganacion();
	private NotacionPosfija ntPos = new NotacionPosfija();
	private CodigoIntermedio codInter = new CodigoIntermedio();*/
	
	private int pos=0;//posicion de error
	//private boolean ban=false;
	
	private String[] 
	terminales = new String[] {"Programa","float","int","char","String",",",";","=","[","]","{","}","+","-","*","/","id","num","(",")","car","cad",
			"print","read","switch","case",":","break","Default","while","==",">","<",">=","<=","!="},
	Tipos = new String[] {"int","float","char","String","Programa"},
	//operadores = new String[] {"+","-","*","/","=","(",")"},

	
	columnas = new String[] {"Programa","float","int","char","String",",",";","=","[","]",
			"{","}","+","-","*","/","id","num","(",")",
			"car","cad","print","read","switch","case",":","break","Default","while",
			"==",">","<",">=","<=","!=","Sent","Dec","Tipo","V",
			"Asig","Eleg","Salida","Msj","Posible","Other","Entrada","E","T","F",
			"Swit","Casos","OthCs","Wh","Cond","Dig","C","Ini","$"},
	
	estados = new String[] {"I00","I01","I02","I03","I04","I05","I06","I07","I08","I09","I10","I11","I12","I13","I14","I15","I16","I17","I18","I19"
			,"I20","I21","I22","I23","I24","I25","I26","I27","I28","I29","I30","I31","I32","I33","I34","I35","I36","I37","I38","I39"
			,"I40","I41","I42","I43","I44","I45","I46","I47","I48","I49","I50","I51","I52","I53","I54","I55","I56","I57","I58","I59"
			,"I60","I61","I62","I63","I64","I65","I66","I67","I68","I69","I70","I71","I72","I73","I74","I75","I76","I77","I78","I79"
			,"I80","I81","I82","I83","I84","I85","I86","I87","I88","I89","I90","I91","I92","I93","I94","I95","I96","I97","I98","I99"},
	
	producciones = new String[] {"Q","Ini","Sent","Sent","Sent","Sent","Sent","Sent","Dec","Tipo","Tipo","Tipo","Tipo","V","V","Asig","Eleg","Eleg","Salida","Msj"
			,"Posible","Posible","Other","Other","Entrada","E","E","E","T","T","T","F","F","F","F","F","Swit","Casos","OthCs","OthCs"
			,"Wh","Cond","Dig","Dig","C","C","C","C","C","C"},
	noterminales = new String[] {"Ini","Sent","Dec","Tipo","V","Asig","Eleg","Salida","Msj","Posible","Other","Entrada","E","T","F","Swit","Casos","OthCs","Wh","Cond","Dif","C"}
	;
	
	private int[] 
			prodTam = new int [] {1,5,1,1,1,1,1,0,3,1,1,1,1,3,2,5,1,1,6,2
					,1,1,2,0,1,3,3,1,3,3,1,1,1,3,1,1,8,6,1,4
					,8,3,1,1,1,1,1,1,1,1};
	
	private String 
	expId=("[a-z]([a-z]|[A-Z])*[0-9]*"),
	expNum=("-?[0-9][0-9]*(.[0-9]*[1-9])?"),
	expchar=("'([a-z]|[A-Z])'"),
	expcad=("~([a-z]|[A-Z]|[0-9])*~"),
	tempCond="";
	;
	
	private boolean 
	banAsig=false;
	
	private LinkedList<DatosIDS> datos = new LinkedList<DatosIDS>(); //pila donde se guardan las variables,tipode datos,valor
	private LinkedList<String> entraUser = new LinkedList<String>();//pila de entrada del usuario no modificado
	private LinkedList<String> entrada = new LinkedList<String>();//pila modifica para usar tabla sintactica
	private LinkedList<String> pilaT = new LinkedList<String>();//pila de estados de la tabla sintactica
	
	private String[][]
			tablaSint =  new String[][] 
			{//		Prog    float   int		char	 	String		 ,		;		=		[		 ]  	{ 		}		+	     -		*	  	/   	id		num		 (			)	    car		cad 	print  	read    swi  	case	:		break 	Def 	whi 	== 		< 		> 		<= 		>= 		!= 		Sent 	dec 	Tipo 	V 		Asig 	Eleg 	Sal		Msj		Pos		Other 	Ent 	E 		T		F 		Sw 		Casos 	OtCS 	Wh 		Cond 	Dig		C 		Ini 		$        -
			/*I00*/	{"I02",	"",		"",		"",			"",			"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",			"",		"",		"",		"",		"",		"", 	"",     "", 	"", 	"", 	"", 	"", 	"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",	 	"",     "",     "",		"",		"",		"",	 	"",     "",     ""		,"I01" 		,""},
			/*I01*/	{"",	"",		"",		"",			"",			"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",			"",		"",		"",		"",		"",		"", 	"",     "", 	"", 	"", 	"", 	"", 	"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",	 	"",     "",     "",		"",		"",		"",	 	"",     "",     ""		,"" 		,"P0"},
			/*I02*/	{"",	"",		"",		"",			"",			"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"I03",	"",		"",			"",		"",		"",		"",		"",		"", 	"",     "", 	"", 	"", 	"", 	"", 	"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",	 	"",     "",     "",		"",		"",		"",	 	"",     "",     ""		,"" 		,""},
			/*I03*/	{"",	"",		"",		"",			"",			"",		"",		"",		"",		"",		"I04",	"",		"",		"",		"",		"",		"",		"",		"",			"",		"",		"",		"",		"",		"", 	"",     "", 	"", 	"", 	"", 	"", 	"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",	 	"",     "",     "",		"",		"",		"",	 	"",     "",     ""		,"" 		,""},
			/*I04*/	{"",	"I13",	"I14",	"I15",		"I16",		"",		"",		"",		"",		"",		"",		"P7",	"",		"",		"",		"",		"I17",	"",		"",			"",		"",		"",		"I18",	"",		"I19", 	"",     "", 	"P7", 	"", 	"I20", 	"", 	"",		"",		"",		"",		"",		"I05",	"I06",	"I12",	"",		"I07",	"",		"I08",	"",		"",		"",		"",		"",	 	"",     "",     "I09",	"",		"",		"I10",	"",     "",     ""		,"" 		,""},
			/*I05*/	{"",	"",		"",		"",			"",			"",		"",		"",		"",		"",		"",		"I21",	"",		"",		"",		"",		"",		"",		"",			"",		"",		"",		"",		"",		"", 	"",     "", 	"", 	"", 	"", 	"", 	"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",	 	"",     "",     "",		"",		"",		"",	 	"",     "",     ""		,"" 		,""},
			/*I06*/	{"",	"",		"",		"",			"",			"",		"",		"",		"",		"",		"",		"P2",	"",		"",		"",		"",		"",		"",		"",			"",		"",		"",		"",		"",		"", 	"",     "", 	"P2", 	"", 	"", 	"", 	"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",	 	"",     "",     "",		"",		"",		"",	 	"",     "",     ""		,"" 		,""},
			/*I07*/	{"",	"",		"",		"",			"",			"",		"",		"",		"",		"",		"",		"P3",	"",		"",		"",		"",		"",		"",		"",			"",		"",		"",		"",		"",		"", 	"",     "", 	"P3", 	"", 	"", 	"", 	"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",	 	"",     "",     "",		"",		"",		"",	 	"",     "",     ""		,"" 		,""},
			/*I08*/	{"",	"",		"",		"",			"",			"",		"",		"",		"",		"",		"",		"P4",	"",		"",		"",		"",		"",		"",		"",			"",		"",		"",		"",		"",		"", 	"",     "", 	"P4", 	"", 	"", 	"", 	"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",	 	"",     "",     "",		"",		"",		"",	 	"",     "",     ""		,"" 		,""},
			/*I09*/	{"",	"",		"",		"",			"",			"",		"",		"",		"",		"",		"",		"P5",	"",		"",		"",		"",		"",		"",		"",			"",		"",		"",		"",		"",		"", 	"",     "", 	"P5", 	"", 	"", 	"", 	"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",	 	"",     "",     "",		"",		"",		"",	 	"",     "",     ""		,"" 		,""},
			//		Prog    float   int		char	 	String		 ,		;		=		[		 ]  	{ 		}		+	     -		*	  	/   	id		num		 (			)	    car		cad 	print  	read    swi  	case	:		break 	Def 	whi 	== 		< 		> 		<= 		>= 		!= 		Sent 	dec 	Tipo 	V 		Asig 	Eleg 	Sal		Msj		Pos		Other 	Ent 	E 		T		F 		Sw 		Casos 	OtCS 	Wh 		Cond 	Dig		C 		Ini 		$        -
			/*I10*/	{"",	"",		"",		"",			"",			"",		"",		"",		"",		"",		"",		"P6",	"",		"",		"",		"",		"",		"",		"",			"",		"",		"",		"",		"",		"", 	"",     "", 	"P6", 	"", 	"", 	"", 	"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",	 	"",     "",     "",		"",		"",		"",	 	"",     "",     ""		,"" 		,""},
			/*I11*/	{"",	"",		"",		"",			"",			"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",			"",		"",		"",		"",		"",		"", 	"",     "", 	"", 	"", 	"", 	"", 	"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",	 	"",     "",     "",		"",		"",		"",	 	"",     "",     ""		,"" 		,""},
			/*I12*/	{"",	"",		"",		"",			"",			"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"I22",	"",		"",			"",		"",		"",		"",		"",		"", 	"",     "", 	"", 	"", 	"", 	"", 	"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",	 	"",     "",     "",		"",		"",		"",	 	"",     "",     ""		,"" 		,""},
			/*I13*/	{"",	"",	  	"",		"",			"",			"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"P9",	"",		"",			"",		"",		"",		"",		"",		"", 	"",     "", 	"", 	"", 	"", 	"", 	"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",	 	"",     "",     "",		"",		"",		"",	 	"",     "",     ""		,"" 		,""},
			/*I14*/	{"",	"",		"",		"",			"",			"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"P10",	"",		"",			"",		"",		"",		"",		"",		"", 	"",     "", 	"", 	"", 	"", 	"", 	"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",	 	"",     "",     "",		"",		"",		"",	 	"",     "",     ""		,"" 		,""},
			/*I15*/	{"",	"",		"",		"",			"",			"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"P11",	"",		"",			"",		"",		"",		"",		"",		"", 	"",     "", 	"", 	"", 	"", 	"", 	"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",	 	"",     "",     "",		"",		"",		"",	 	"",     "",     ""		,"" 		,""},
			/*I16*/	{"",	"",		"",		"",			"",			"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"P12",	"",		"",			"",		"",		"",		"",		"",		"", 	"",     "", 	"", 	"", 	"", 	"", 	"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",	 	"",     "",     "",		"",		"",		"",	 	"",     "",     ""		,"" 		,""},
			/*I17*/	{"",	"",		"",		"",			"",			"",		"",		"I29",	"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",			"",		"",		"",		"",		"",		"", 	"",     "", 	"", 	"", 	"", 	"", 	"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",	 	"",     "",     "",		"",		"",		"",	 	"",     "",     ""		,"" 		,""},
			/*I18*/	{"",	"",		"",		"",			"",			"",		"",		"",		"I53",	"",		"",		"",		"",		"",		"",		"",		"",		"",		"",			"",		"",		"",		"",		"",		"", 	"",     "", 	"", 	"", 	"", 	"", 	"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",	 	"",     "",     "",		"",		"",		"",	 	"",     "",     ""		,"" 		,""},
			/*I19*/	{"",	"",		"",		"",			"",			"",		"",		"",		"I64",	"",		"",		"",		"",		"",		"",		"",		"",		"",		"",			"",		"",		"",		"",		"",		"", 	"",     "", 	"", 	"", 	"", 	"", 	"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",	 	"",     "",     "",		"",		"",		"",	 	"",     "",     ""		,"" 		,""},
			//		Prog    float   int		char	 	String		 ,		;		=		[		 ]  	{ 		}		+	     -		*	  	/   	id		num		 (			)	    car		cad 	print  	read    swi  	case	:		break 	Def 	whi 	== 		< 		> 		<= 		>= 		!= 		Sent 	dec 	Tipo 	V 		Asig 	Eleg 	Sal		Msj		Pos		Other 	Ent 	E 		T		F 		Sw 		Casos 	OtCS 	Wh 		Cond 	Dig		C 		Ini 		$        -			
			/*I20*/	{"",	"",		"",		"",			"",			"",		"",		"",		"I82",	"",		"",		"",		"",		"",		"",		"",		"",		"",		"",			"",		"",		"",		"",		"",		"", 	"",     "", 	"", 	"", 	"", 	"", 	"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",	 	"",     "",     "",		"",		"",		"",	 	"",     "",     ""		,"" 		,""},
			/*I21*/	{"",	"",		"",		"",			"",			"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",			"",		"",		"",		"",		"",		"", 	"",     "", 	"", 	"", 	"", 	"", 	"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",	 	"",     "",     "",		"",		"",		"",	 	"",     "",     ""		,"" 		,"P01"},
			/*I22*/	{"",	"",		"",		"",			"",			"I24",	"I25",	"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",			"",		"",		"",		"",		"",		"", 	"",     "", 	"", 	"", 	"", 	"", 	"",		"",		"",		"",		"",		"",		"",		"",		"I23",	"",		"",		"",		"",		"",		"",		"",		"",	 	"",     "",     "",		"",		"",		"",	 	"",     "",     ""		,"" 		,""},
			/*I23*/	{"",	"",		"",		"",			"",			"",		"",		"",		"",		"",		"",		"P8",	"",		"",		"",		"",		"",		"",		"",			"",		"",		"",		"",		"",		"", 	"",     "", 	"P8", 	"", 	"", 	"", 	"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",	 	"",     "",     "",		"",		"",		"",	 	"",     "",     ""		,"" 		,""},
			/*I24*/	{"",	"",		"",		"",			"",			"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"I26",	"",		"",			"",		"",		"",		"",		"",		"", 	"",     "", 	"", 	"", 	"", 	"", 	"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",	 	"",     "",     "",		"",		"",		"",	 	"",     "",     ""		,"" 		,""},
			/*I25*/	{"",	"I13",	"I14",	"I15",		"I16",		"",		"",		"",		"",		"",		"",		"P7",	"",		"",		"",		"",		"I17",	"",		"",			"",		"",		"",		"I18",	"",		"I19", 	"",     "", 	"P7", 	"", 	"I20", 	"", 	"",		"",		"",		"",		"",		"I28",	"I06",	"I12",	"",		"I07",	"",		"I08",	"",		"",		"",		"",		"",	 	"",     "",     "I09",	"",		"",		"I10",	"",     "",     ""		,"" 		,""},
			/*I26*/	{"",	"",		"",		"",			"",			"I24",	"I25",	"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",			"",		"",		"",		"",		"",		"", 	"",     "", 	"", 	"", 	"", 	"", 	"",		"",		"",		"",		"",		"",		"",		"",		"I27",	"",		"",		"",		"",		"",		"",		"",		"",	 	"",     "",     "",		"",		"",		"",	 	"",     "",     ""		,"" 		,""},
			/*I27*/	{"",	"",		"",		"",			"",			"",		"",		"",		"",		"",		"",		"P13",	"",		"",		"",		"",		"",		"",		"",			"",		"",		"",		"",		"",		"", 	"",     "", 	"", 	"", 	"", 	"", 	"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",	 	"",     "",     "",		"",		"",		"",	 	"",     "",     ""		,"" 		,""},
			/*I28*/	{"",	"",		"",		"",			"",			"",		"",		"",		"",		"",		"",		"P14",	"",		"",		"",		"",		"",		"",		"",			"",		"",		"",		"",		"",		"", 	"",     "", 	"", 	"", 	"", 	"", 	"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",	 	"",     "",     "",		"",		"",		"",	 	"",     "",     ""		,"" 		,""},
			/*I29*/	{"",	"",		"",		"",			"",			"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"I36",	"I37",	"I38",		"",		"I39",	"I40",	"",		"I33",	"", 	"",     "", 	"", 	"", 	"", 	"", 	"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"I30",	"",		"",		"",		"",		"I31",	"I32",	"I34",  "I35",  "",		"",		"",		"",	 	"",     "",     ""		,"" 		,""},
			//		Prog    float   int		char	 	String		 ,		;		=		[		 ]  	{ 		}		+	     -		*	  	/   	id		num		 (			)	    car		cad 	print  	read    swi  	case	:		break 	Def 	whi 	== 		< 		> 		<= 		>= 		!= 		Sent 	dec 	Tipo 	V 		Asig 	Eleg 	Sal		Msj		Pos		Other 	Ent 	E 		T		F 		Sw 		Casos 	OtCS 	Wh 		Cond 	Dig		C 		Ini 		$        -			
			/*I30*/	{"",	"",		"",		"",			"",			"",		"I41",	"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",			"",		"",		"",		"",		"",		"", 	"",     "", 	"", 	"", 	"", 	"", 	"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",	 	"",     "",     "",		"",		"",		"",	 	"",     "",     ""		,"" 		,""},
			/*I31*/	{"",	"",		"",		"",			"",			"",		"P16",	"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",			"",		"",		"",		"",		"",		"", 	"",     "", 	"", 	"", 	"", 	"", 	"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",	 	"",     "",     "",		"",		"",		"",	 	"",     "",     ""		,"" 		,""},
			/*I32*/	{"",	"",		"",		"",			"",			"",		"P17",	"",		"",		"",		"",		"",		"I43",	"I44",	"",		"",		"",		"",		"",			"",		"",		"",		"",		"",		"", 	"",     "", 	"", 	"", 	"", 	"", 	"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",	 	"",     "",     "",		"",		"",		"",	 	"",     "",     ""		,"" 		,""},
			/*I33*/	{"",	"",		"",		"",			"",			"",		"P24",	"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",			"",		"",		"",		"",		"",		"", 	"",     "", 	"", 	"", 	"", 	"", 	"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",	 	"",     "",     "",		"",		"",		"",	 	"",     "",     ""		,"" 		,""},
			/*I34*/	{"",	"",		"",		"",			"",			"",		"P27",	"",		"",		"",		"",		"",		"P27",	"P27",	"I47",	"I48",	"",		"",		"",			"P27",	"",		"",		"",		"",		"", 	"",     "", 	"", 	"", 	"", 	"", 	"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",	 	"",     "",     "",		"",		"",		"",	 	"",     "",     ""		,"" 		,""},
			/*I35*/	{"",	"",		"",		"",			"",			"",		"P30",	"",		"",		"",		"",		"",		"P30",	"P30",	"P30",	"P30",	"",		"",		"",			"P30",	"",		"",		"",		"",		"", 	"",     "", 	"", 	"", 	"", 	"", 	"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",	 	"",     "",     "",		"",		"",		"",	 	"",     "",     ""		,"" 		,""},
			/*I36*/	{"",	"",		"",		"",			"",			"",		"P31",	"",		"",		"",		"",		"",		"P31",	"P31",	"P31",	"P31",	"",		"",		"",			"P31",	"",		"",		"",		"",		"", 	"",     "", 	"", 	"", 	"", 	"", 	"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",	 	"",     "",     "",		"",		"",		"",	 	"",     "",     ""		,"" 		,""},
			/*I37*/	{"",	"",		"",		"",			"",			"",		"P32",	"",		"",		"",		"",		"",		"P32",	"P32",	"P32",	"P32",	"",		"",		"",			"P32",	"",		"",		"",		"",		"", 	"",     "", 	"", 	"", 	"", 	"", 	"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",	 	"",     "",     "",		"",		"",		"",	 	"",     "",     ""		,"" 		,""},
			/*I38*/	{"",	"",		"",		"",			"",			"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"I36",	"I37",	"I38",		"",		"I39",	"I40",		"",		"",		"", 	"",     "", 	"", 	"", 	"", 	"", 	"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"I51",	"I34",  "I35",  "",		"",		"",		"",	 	"",     "",     ""		,"" 		,""},
			/*I39*/	{"",	"",		"",		"",			"",			"",		"P34",	"",		"",		"",		"",		"",		"P34",	"P34",	"P34",	"P34",	"",		"",		"",			"P34",	"",		"",		"",		"",		"", 	"",     "", 	"", 	"", 	"", 	"", 	"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",	 	"",     "",     "",		"",		"",		"",	 	"",     "",     ""		,"" 		,""},
			//		Prog    float   int		char	 	String		 ,		;		=		[		 ]  	{ 		}		+	     -		*	  	/   	id		num		 (			)	    car		cad 	print  	read    swi  	case	:		break 	Def 	whi 	== 		< 		> 		<= 		>= 		!= 		Sent 	dec 	Tipo 	V 		Asig 	Eleg 	Sal		Msj		Pos		Other 	Ent 	E 		T		F 		Sw 		Casos 	OtCS 	Wh 		Cond 	Dig		C 		Ini 		$        -			
			/*I40*/	{"",	"",		"",		"",			"",			"",		"P35",	"",		"",		"",		"",		"",		"P35",	"P35",	"P35",	"P35",	"",		"",		"",			"P35",	"",		"",		"",		"",		"", 	"",     "", 	"", 	"", 	"", 	"", 	"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",	 	"",     "",     "",		"",		"",		"",	 	"",     "",     ""		,"" 		,""},
			/*I41*/	{"",	"I13",	"I14",	"I15",		"I16",		"",		"",		"",		"",		"",		"",		"P7",	"",		"",		"",		"",		"I17",	"",		"",			"",		"",		"",		"I18",	"",		"I19", 	"",     "", 	"P7", 	"", 	"I20", 	"", 	"",		"",		"",		"",		"",		"I42",	"I06",	"I12",	"",		"I07",	"",		"I08",	"",		"",		"",		"",		"",	 	"",     "",     "I09",	"",		"",		"I10",	"",     "",     ""		,"" 		,""},
			/*I42*/	{"",	"",		"",		"",			"",			"",		"",		"",		"",		"",		"",		"P15",	"",		"",		"",		"",		"",		"",		"",			"",		"",		"",		"",		"",		"", 	"",     "", 	"P15", 	"", 	"", 	"", 	"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",	 	"",     "",     "",		"",		"",		"",	 	"",     "",     ""		,"" 		,""},
			/*I43*/	{"",	"",		"",		"",			"",			"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"I36",	"I37",	"I38",		"",		"I39",	"I40",	"",		"",		"", 	"",     "", 	"", 	"", 	"", 	"", 	"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",	 	"I45",  "I35",  "",		"",		"",		"",	 	"",     "",     ""		,"" 		,""},
			/*I44*/	{"",	"",		"",		"",			"",			"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"I36",	"I37",	"I38",		"",		"I39",	"I40",	"",		"",		"", 	"",     "", 	"", 	"", 	"", 	"", 	"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",	 	"I46",  "I35",  "",		"",		"",		"",	 	"",     "",     ""		,"" 		,""},
			/*I45*/	{"",	"",		"",		"",			"",			"",		"P25",	"",		"",		"",		"",		"",		"P25",	"P25",	"I47",	"I48",	"",		"",		"",			"P25",	"",		"",		"",		"",		"", 	"",     "", 	"", 	"", 	"", 	"", 	"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",	 	"",     "",     "",		"",		"",		"",	 	"",     "",     ""		,"" 		,""},
			/*I46*/	{"",	"",		"",		"",			"",			"",		"P26",	"",		"",		"",		"",		"",		"P26",	"P26",	"I47",	"I48",	"",		"",		"",			"P26",	"",		"",		"",		"",		"", 	"",     "", 	"", 	"", 	"", 	"", 	"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",	 	"",     "",     "",		"",		"",		"",	 	"",     "",     ""		,"" 		,""},
			/*I47*/	{"",	"",		"",		"",			"",			"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"I36",	"I37",	"I38",		"",		"I39",	"I40",	"",		"",		"", 	"",     "", 	"", 	"", 	"", 	"", 	"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",	 	"",     "I49",  "",		"",		"",		"",	 	"",     "",     ""		,"" 		,""},
			/*I48*/	{"",	"",		"",		"",			"",			"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"I36",	"I37",	"I38",		"",		"I39",	"I40",	"",		"",		"", 	"",     "", 	"", 	"", 	"", 	"", 	"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",	 	"",     "I50",  "",		"",		"",		"",	 	"",     "",     ""		,"" 		,""},
			/*I49*/	{"",	"",		"",		"",			"",			"",		"P28",	"",		"",		"",		"",		"",		"P28",	"P28",	"P28",	"P28",	"",		"",		"",			"P28",	"",		"",		"",		"",		"", 	"",     "", 	"", 	"", 	"", 	"", 	"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",	 	"",     "",     "",		"",		"",		"",	 	"",     "",     ""		,"" 		,""},
			//		Prog    float   int		char	 	String		 ,		;		=		[		 ]  	{ 		}		+	     -		*	  	/   	id		num		 (			)	    car		cad 	print  	read    swi  	case	:		break 	Def 	whi 	== 		< 		> 		<= 		>= 		!= 		Sent 	dec 	Tipo 	V 		Asig 	Eleg 	Sal		Msj		Pos		Other 	Ent 	E 		T		F 		Sw 		Casos 	OtCS 	Wh 		Cond 	Dig		C 		Ini 		$        -			
			/*I50*/	{"",	"",		"",		"",			"",			"",		"P29",	"",		"",		"",		"",		"",		"P29",	"P29",	"P29",	"P29",	"",		"",		"",			"P29",	"",		"",		"",		"",		"", 	"",     "", 	"", 	"", 	"", 	"", 	"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",	 	"",     "",     "",		"",		"",		"",	 	"",     "",     ""		,"" 		,""},
			/*I51*/	{"",	"",		"",		"",			"",			"",		"",		"",		"",		"",		"",		"",		"I43",	"I44",	"",		"",		"",		"",		"",			"I52",	"",		"",		"",		"",		"", 	"",     "", 	"", 	"", 	"", 	"", 	"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",	 	"",     "",     "",		"",		"",		"",	 	"",     "",     ""		,"" 		,""},
			/*I52*/	{"",	"",		"",		"",			"",			"",		"P33",	"",		"",		"",		"",		"",		"P33",	"P33",	"P33",	"P33",	"",		"",		"",			"P33",	"",		"",		"",		"",		"", 	"",     "", 	"", 	"", 	"", 	"", 	"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",	 	"",     "",     "",		"",		"",		"",	 	"",     "",     ""		,"" 		,""},
			/*I53*/	{"",	"",		"",		"",			"",			"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"I57",	"",		"",			"",		"",		"I56",	"",		"",		"", 	"",     "", 	"", 	"", 	"", 	"", 	"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"I54",	"I55",	"",		"",		"",	 	"",     "",     "",		"",		"",		"",	 	"",     "",     ""		,"" 		,""},
			/*I54*/	{"",	"",		"",		"",			"",			"",		"",		"",		"",		"I58",	"",		"",		"",		"",		"",		"",		"",		"",		"",			"",		"",		"",		"",		"",		"", 	"",     "", 	"", 	"", 	"", 	"", 	"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",	 	"",     "",     "",		"",		"",		"",	 	"",     "",     ""		,"" 		,""},
			/*I55*/	{"",	"",		"",		"",			"",			"",		"",		"",		"",		"P23",	"",		"",		"I62",	"",		"",		"",		"",		"",		"",			"",		"",		"",		"",		"",		"", 	"",     "", 	"", 	"", 	"", 	"", 	"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"I61",	"",		"",	 	"",     "",     "",		"",		"",		"",	 	"",     "",     ""		,"" 		,""},
			/*I56*/	{"",	"",		"",		"",			"",			"",		"",		"",		"",		"P20",	"",		"",		"P20",	"",		"",		"",		"",		"",		"",			"",		"",		"",		"",		"",		"", 	"",     "", 	"", 	"", 	"", 	"", 	"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",	 	"",     "",     "",		"",		"",		"",	 	"",     "",     ""		,"" 		,""},
			/*I57*/	{"",	"",		"",		"",			"",			"",		"",		"",		"",		"P21",	"",		"",		"P21",	"",		"",		"",		"",		"",		"",			"",		"",		"",		"",		"",		"", 	"",     "", 	"", 	"", 	"", 	"", 	"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",	 	"",     "",     "",		"",		"",		"",	 	"",     "",     ""		,"" 		,""},
			/*I58*/	{"",	"",		"",		"",			"",			"",		"I59",	"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",			"",		"",		"",		"",		"",		"", 	"",     "", 	"", 	"", 	"", 	"", 	"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",	 	"",     "",     "",		"",		"",		"",	 	"",     "",     ""		,"" 		,""},
			/*I59*/	{"",	"I13",	"I14",	"I15",		"I16",		"",		"",		"",		"",		"",		"",		"P7",	"",		"",		"",		"",		"I17",	"",		"",			"",		"",		"",		"I18",	"",		"I19", 	"",     "", 	"P7", 	"", 	"I20", 	"", 	"",		"",		"",		"",		"",		"I60",	"I06",	"I12",	"",		"I07",	"",		"I08",	"",		"",		"",		"",		"",	 	"",     "",     "I09",	"",		"",		"I10",	"",     "",     ""		,"" 		,""},
			//		Prog    float   int		char	 	String		 ,		;		=		[		 ]  	{ 		}		+	     -		*	  	/   	id		num		 (			)	    car		cad 	print  	read    swi  	case	:		break 	Def 	whi 	== 		< 		> 		<= 		>= 		!= 		Sent 	dec 	Tipo 	V 		Asig 	Eleg 	Sal		Msj		Pos		Other 	Ent 	E 		T		F 		Sw 		Casos 	OtCS 	Wh 		Cond 	Dig		C 		Ini 		$        -			
			/*I60*/	{"",	"",		"",		"",			"",			"",		"",		"",		"",		"",		"",		"P18",	"",		"",		"",		"",		"",		"",		"",			"",		"",		"",		"",		"", 	"",		"",     "", 	"P18", 	"", 	"", 	"", 	"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",	 	"",     "",     "",		"",		"",		"",	 	"",     "",     ""		,"" 		,""},
			/*I61*/	{"",	"",		"",		"",			"",			"",		"",		"",		"",		"P19",	"",		"",		"",		"",		"",		"",		"",		"",		"",			"",		"",		"",		"",		"",		"", 	"",     "", 	"", 	"", 	"", 	"", 	"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",	 	"",     "",     "",		"",		"",		"",	 	"",     "",     ""		,"" 		,""},
			/*I62*/	{"",	"",		"",		"",			"",			"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"I57",	"",		"",			"",		"",		"I56",	"",		"", 	"",		"",     "", 	"", 	"", 	"", 	"", 	"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"I63",	"I55",	"",		"",		"",	 	"",     "",     "",		"",		"",		"",	 	"",     "",     ""		,"" 		,""},
			/*I63*/	{"",	"",		"",		"",			"",			"",		"",		"",		"",		"P22",	"",		"",		"",		"",		"",		"",		"",		"",		"",			"",		"",		"",		"",		"", 	"",		"",     "", 	"", 	"", 	"", 	"", 	"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",	 	"",     "",     "",		"",		"",		"",	 	"",     "",     ""		,"" 		,""},
			/*I64*/	{"",	"",		"",		"",			"",			"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"I65",	"",		"",			"",		"",		"",		"",		"", 	"",		"",     "", 	"", 	"", 	"", 	"", 	"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",	 	"",     "",     "",		"",		"",		"",	 	"",     "",     ""		,"" 		,""},
			/*I65*/	{"",	"",		"",		"",			"",			"",		"",		"",		"",		"I66",	"",		"",		"",		"",		"",		"",		"",		"",		"",			"",		"",		"",		"",		"", 	"",		"",     "", 	"", 	"", 	"", 	"", 	"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",	 	"",     "",     "",		"",		"",		"",	 	"",     "",     ""		,"" 		,""},
			/*I66*/	{"",	"",		"",		"",			"",			"",		"",		"",		"",		"",		"I67",	"",		"",		"",		"",		"",		"",		"",		"",			"",		"",		"",		"",		"", 	"",		"",     "", 	"", 	"", 	"", 	"", 	"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",	 	"",     "",     "",		"",		"",		"",	 	"",     "",     ""		,"" 		,""},
			/*I67*/	{"",	"",		"",		"",			"",			"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",			"",		"",		"",		"",		"", 	"",		"I69",  "", 	"", 	"", 	"", 	"", 	"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",	 	"",     "",     "",		"I68",	"",		"",	 	"",     "",     ""		,"" 		,""},
			/*I68*/	{"",	"",		"",		"",			"",			"",		"",		"",		"",		"",		"",		"I70",	"",		"",		"",		"",		"",		"",		"",			"",		"",		"",		"",		"", 	"",		"",     "", 	"", 	"", 	"", 	"", 	"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",	 	"",     "",     "",		"",		"",		"",	 	"",     "",     ""		,"" 		,""},
			/*I69*/	{"",	"",		"",		"",			"",			"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"I72",	"",			"",		"",		"",		"",		"", 	"",		"",     "", 	"", 	"", 	"", 	"", 	"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",	 	"",     "",     "",		"",		"",		"",	 	"",     "",     ""		,"" 		,""},
			//		Prog    float   int		char	 	String		 ,		;		=		[		 ]  	{ 		}		+	     -		*	  	/   	id		num		 (			)	    car		cad 	print  	read    swi  	case	:		break 	Def 	whi 	== 		< 		> 		<= 		>= 		!= 		Sent 	dec 	Tipo 	V 		Asig 	Eleg 	Sal		Msj		Pos		Other 	Ent 	E 		T		F 		Sw 		Casos 	OtCS 	Wh 		Cond 	Dig		C 		Ini 		$        -			
			/*I70*/	{"",	"I13",	"I14",	"I15",		"I16",		"",		"",		"",		"",		"",		"",		"P7",	"",		"",		"",		"",		"I17",	"",		"",			"",		"",		"",		"I18",	"",		"I19", 	"",     "", 	"P7", 	"", 	"I20", 	"", 	"",		"",		"",		"",		"",		"I71",	"I06",	"I12",	"",		"I07",	"",		"I08",	"",		"",		"",		"",		"",	 	"",     "",     "I09",	"",		"",		"I10",	"",     "",     ""		,"" 		,""},
			/*I71*/	{"",	"",		"",		"",			"",			"",		"",		"",		"",		"",		"",		"P36",	"",		"",		"",		"",		"",		"",		"",			"",		"",		"",		"",		"", 	"",		"",     "", 	"P36", 	"", 	"", 	"", 	"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",	 	"",     "",     "",		"",		"",		"",	 	"",     "",     ""		,"" 		,""},
			/*I72*/	{"",	"",		"",		"",			"",			"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",			"",		"",		"",		"",		"", 	"",		"",     "I73", 	"", 	"", 	"", 	"", 	"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",	 	"",     "",     "",		"",		"",		"",	 	"",     "",     ""		,"" 		,""},
			/*I73*/	{"",	"I13",	"I14",	"I15",		"I16",		"",		"",		"",		"",		"",		"",		"P7",	"",		"",		"",		"",		"I17",	"",		"",			"",		"",		"",		"I18",	"",		"I19", 	"",     "", 	"P7", 	"", 	"I20", 	"", 	"",		"",		"",		"",		"",		"I74",	"I06",	"I12",	"",		"I07",	"",		"I08",	"",		"",		"",		"",		"",	 	"",     "",     "I09",	"",		"",		"I10",	"",     "",     ""		,"" 		,""},
			/*I74*/	{"",	"",		"",		"",			"",			"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",			"",		"",		"",		"",		"", 	"",		"",     "", 	"I75", 	"", 	"", 	"", 	"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",	 	"",     "",     "",		"",		"",		"",	 	"",     "",     ""		,"" 		,""},
			/*I75*/	{"",	"",		"",		"",			"",			"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",			"",		"",		"",		"",		"", 	"",		"I69",  "", 	"", 	"I78", 	"", 	"", 	"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",	 	"",     "",     "",		"I77",	"I76",	"",	 	"",     "",     ""		,"" 		,""},
			/*I76*/	{"",	"",		"",		"",			"",			"",		"",		"",		"",		"",		"",		"P37",	"",		"",		"",		"",		"",		"",		"",			"",		"",		"",		"",		"", 	"",		"",     "", 	"", 	"", 	"", 	"", 	"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",	 	"",     "",     "",		"",		"",		"",	 	"",     "",     ""		,"" 		,""},
			/*I77*/	{"",	"",		"",		"",			"",			"",		"",		"",		"",		"",		"",		"P38",	"",		"",		"",		"",		"",		"",		"",			"",		"",		"",		"",		"", 	"",		"",     "", 	"", 	"", 	"", 	"", 	"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",	 	"",     "",     "",		"",		"",		"",	 	"",     "",     ""		,"" 		,""},
			/*I78*/	{"",	"",		"",		"",			"",			"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",			"",		"",		"",		"",		"", 	"",		"",     "I79",  "", 	"", 	"", 	"", 	"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",	 	"",     "",     "",		"",		"",		"",	 	"",     "",     ""		,"" 		,""},
			/*I79*/	{"",	"I13",	"I14",	"I15",		"I16",		"",		"",		"",		"",		"",		"",		"P7",	"",		"",		"",		"",		"I17",	"",		"",			"",		"",		"",		"I18",	"",		"I19", 	"",     "", 	"P7", 	"", 	"I20", 	"", 	"",		"",		"",		"",		"",		"I80",	"I06",	"I12",	"",		"I07",	"",		"I08",	"",		"",		"",		"",		"",	 	"",     "",     "I09",	"",		"",		"I10",	"",     "",     ""		,"" 		,""},
			//		Prog    float   int		char	 	String		 ,		;		=		[		 ]  	{ 		}		+	     -		*	  	/   	id		num		 (			)	    car		cad 	print  	read    swi  	case	:		break 	Def 	whi 	== 		> 		< 		>= 		<= 		!= 		Sent 	dec 	Tipo 	V 		Asig 	Eleg 	Sal		Msj		Pos		Other 	Ent 	E 		T		F 		Sw 		Casos 	OtCS 	Wh 		Cond 	Dig		C 		Ini 		$        -			
			/*I80*/	{"",	"",		"",		"",			"",			"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",			"",		"",		"",		"",		"", 	"",		"",     "", 	"I81", 	"", 	"", 	"", 	"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",	 	"",     "",     "",		"",		"",		"",	 	"",     "",     ""		,"" 		,""},
			/*I81*/	{"",	"",		"",		"",			"",			"",		"",		"",		"",		"",		"",		"P39",	"",		"",		"",		"",		"",		"",		"",			"",		"",		"",		"",		"", 	"",		"",     "", 	"", 	"", 	"", 	"", 	"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",	 	"",     "",     "",		"",		"",		"",	 	"",     "",     ""		,"" 		,""},
			/*I82*/	{"",	"",		"",		"",			"",			"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"I85",	"I86",	"",			"",		"",		"",		"",		"", 	"",		"",     "", 	"", 	"", 	"", 	"", 	"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",	 	"",     "",     "",		"",		"",		"",	 	"I83",  "I84",  ""		,"" 		,""},
			/*I83*/	{"",	"",		"",		"",			"",			"",		"",		"",		"",		"I87",	"",		"",		"",		"",		"",		"",		"",		"",		"",			"",		"",		"",		"",		"", 	"",		"",     "", 	"", 	"", 	"", 	"", 	"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",	 	"",     "",     "",		"",		"",		"",	 	"",     "",     ""		,"" 		,""},
			/*I84*/	{"",	"",		"",		"",			"",			"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",			"",		"",		"",		"",		"", 	"",		"",     "", 	"", 	"", 	"", 	"I93", 	"I94",	"I95",	"I96",	"I97",	"I98",	"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",	 	"",     "",     "",		"",		"",		"",	 	"",     "",     "I92"	,"" 		,""},
			/*I85*/	{"",	"",		"",		"",			"",			"",		"",		"",		"",		"P42",	"",		"",		"",		"",		"",		"",		"",		"",		"",			"",		"",		"",		"",		"", 	"",		"",     "", 	"", 	"", 	"", 	"P42", 	"P42",	"P42",	"P42",	"P42",	"P42",	"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",	 	"",     "",     "",		"",		"",		"",	 	"",     "",     ""		,"" 		,""},
			/*I86*/	{"",	"",		"",		"",			"",			"",		"",		"",		"",		"P43",	"",		"",		"",		"",		"",		"",		"",		"",		"",			"",		"",		"",		"",		"", 	"",		"",     "", 	"", 	"", 	"", 	"P43", 	"P43",	"P43",	"P43",	"P43",	"P43",	"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",	 	"",     "",     "",		"",		"",		"",	 	"",     "",     ""		,"" 		,""},
			/*I87*/	{"",	"",		"",		"",			"",			"",		"",		"",		"",		"",		"I88",	"",		"",		"",		"",		"",		"",		"",		"",			"",		"",		"",		"",		"", 	"",		"",     "", 	"", 	"", 	"", 	"", 	"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",	 	"",     "",     "",		"",		"",		"",	 	"",     "",     ""		,"" 		,""},
			/*I88*/	{"",	"I13",	"I14",	"I15",		"I16",		"",		"",		"",		"",		"",		"",		"P7",	"",		"",		"",		"",		"I17",	"",		"",			"",		"",		"",		"I18",	"",		"I19", 	"",     "", 	"P7", 	"", 	"I20", 	"", 	"",		"",		"",		"",		"",		"I89",	"I06",	"I12",	"",		"I07",	"",		"I08",	"",		"",		"",		"",		"",	 	"",     "",     "I09",	"",		"",		"I10",	"",     "",     ""		,"" 		,""},
			/*I89*/	{"",	"",		"",		"",			"",			"",		"",		"",		"",		"",		"",		"I90",	"",		"",		"",		"",		"",		"",		"",			"",		"",		"",		"",		"", 	"",		"",     "", 	"", 	"", 	"", 	"", 	"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",	 	"",     "",     "",		"",		"",		"",	 	"",     "",     ""		,"" 		,""},
			//		Prog    float   int		char	 	String		 ,		;		=		[		 ]  	{ 		}		+	     -		*	  	/   	id		num		 (			)	    car		cad 	print  	read    swi  	case	:		break 	Def 	whi 	== 		< 		> 		<= 		>= 		!= 		Sent 	dec 	Tipo 	V 		Asig 	Eleg 	Sal		Msj		Pos		Other 	Ent 	E 		T		F 		Sw 		Casos 	OtCS 	Wh 		Cond 	Dig		C 		Ini 		$        -			
			/*I90*/	{"",	"I13",	"I14",	"I15",		"I16",		"",		"",		"",		"",		"",		"",		"P7",	"",		"",		"",		"",		"I17",	"",		"",			"",		"",		"",		"I18",	"",		"I19", 	"",     "", 	"P7", 	"", 	"I20", 	"", 	"",		"",		"",		"",		"",		"I91",	"I06",	"I12",	"",		"I07",	"",		"I08",	"",		"",		"",		"",		"",	 	"",     "",     "I09",	"",		"",		"I10",	"",     "",     ""		,"" 		,""},
			/*I91*/	{"",	"",		"",		"",			"",			"",		"",		"",		"",		"",		"",		"P40",	"",		"",		"",		"",		"",		"",		"",			"",		"",		"",		"",		"", 	"",		"",     "", 	"P40", 	"", 	"", 	"", 	"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",	 	"",     "",     "",		"",		"",		"",	 	"",     "",     ""		,"" 		,""},
			/*I92*/	{"",	"",		"",		"",			"",			"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"I85",	"I86",	"",			"",		"",		"",		"",		"", 	"",		"",     "", 	"", 	"", 	"", 	"", 	"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",	 	"",     "",     "",		"",		"",		"",	 	"",     "I99",  ""		,"" 		,""},
			/*I93*/	{"",	"",		"",		"",			"",			"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"P44",	"P44",	"",			"",		"",		"",		"",		"", 	"",		"",     "", 	"", 	"", 	"", 	"", 	"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",	 	"",     "",     "",		"",		"",		"",	 	"",     "",     ""		,"" 		,""},
			/*I94*/	{"",	"",		"",		"",			"",			"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"P45",	"P45",	"",			"",		"",		"",		"",		"", 	"",		"",     "", 	"", 	"", 	"", 	"", 	"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",	 	"",     "",     "",		"",		"",		"",	 	"",     "",     ""		,"" 		,""},
			/*I95*/	{"",	"",		"",		"",			"",			"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"P46",	"P46",	"",			"",		"",		"",		"",		"", 	"",		"",     "", 	"", 	"", 	"", 	"", 	"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",	 	"",     "",     "",		"",		"",		"",	 	"",     "",     ""		,"" 		,""},
			/*I96*/	{"",	"",		"",		"",			"",			"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"P47",	"P47",	"",			"",		"",		"",		"",		"", 	"",		"",     "", 	"", 	"", 	"", 	"", 	"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",	 	"",     "",     "",		"",		"",		"",	 	"",     "",     ""		,"" 		,""},
			/*I97*/	{"",	"",		"",		"",			"",			"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"P48",	"P48",	"",			"",		"",		"",		"",		"", 	"",		"",     "", 	"", 	"", 	"", 	"", 	"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",	 	"",     "",     "",		"",		"",		"",	 	"",     "",     ""		,"" 		,""},
			/*I98*/	{"",	"",		"",		"",			"",			"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"P49",	"P49",	"",			"",		"",		"",		"",		"", 	"",		"",     "", 	"", 	"", 	"", 	"", 	"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",	 	"",     "",     "",		"",		"",		"",	 	"",     "",     ""		,"" 		,""},
			/*I99*/	{"",	"",		"",		"",			"",			"",		"",		"",		"",		"P41",	"",		"",		"",		"",		"",		"",		"",		"",		"",			"",		"",		"",		"",		"", 	"",		"",     "", 	"", 	"", 	"", 	"", 	"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",		"",	 	"",     "",     "",		"",		"",		"",	 	"",     "",     ""		,"" 		,""},
			
			};
			
	LinkedList<String> tablaSimbolos=new LinkedList<String>();
			
	
	private void Error(int pos,String cad)	
	{
		for(int x=0;x<entrada.size()-1;x++)
		{
			if(x==pos)
				obd.Print("??"+entraUser.get(x)+"??");
			else
				obd.Print(entraUser.get(x)+" ");
		}
		if(entrada.get(pos)=="null0")
		{
			obd.Println("La variable no ha sido declarada");
			
		}else
			if(entrada.get(pos)=="null1")
			{
				obd.Println("La variable se repite");
				
			}
			else
				if(!cad.isBlank())
				{
					obd.Println(cad);
				}
				else
				{
					obd.Println(entrada.get(pos)=="$"?"Se debe continuar la expresion":"Error en el elemento \t ??"+entraUser.get(pos)+"??");
					obd.Print("Valores posibles aceptados: \t");
					int rango = Integer.parseInt(pilaT.getLast().substring(1)),y;
					for(int x=0;x<tablaSint[rango].length;x++)
					{
						if(!tablaSint[rango][x].isBlank())
						{
							for(y=0;y<noterminales.length && !noterminales[y].equals(columnas[x]) ;y++);
							if(y<noterminales.length)
							{
								//obd.Print("Siguientes "+columnas[x]);
							}
							else
								obd.Print(columnas[x]);
							obd.Print("\\");
						}
					}
				}
	}
			
	public void Accion (LinkedList<String>pila)
	{
		pilaT.add("$");
		pilaT.add("I00");
		int x,y,z,cantEliminar;
		
		while(!pila.getFirst().equals("Q"))
		{
			for(x=0;x<estados.length && !pilaT.getLast().equals(estados[x]) ;x++);//////Tabla sintactica
			for(y=0;y<columnas.length && !pila.getFirst().equals(columnas[y]) ;y++);//////Tabla sintactica
			
			if(x<estados.length && y<columnas.length)//////Tabla sintactica
			{
				System.out.println("///////////////////////////////////");//////Tabla sintactica
				obd.Println(pilaT.getLast()+"/"+pila.getFirst());//////Tabla sintactica
				//obd.Println(tablaSint[x][y]);
				
				
				
				this.mostrarPilas(pilaT);//////Tabla sintactica
				
				if(!tablaSint[x][y].isBlank())//////Tabla sintactica
				{
					if(tablaSint[x][y].charAt(0)=='I')//////Tabla sintactica
					{
						System.out.println("Estados");
						pilaT.add(tablaSint[x][y]);//////Tabla sintactica
						///////////////////////////////////////////////////////////////////////////////
						if(this.Excepciones(pila.getFirst()))
							break;
						//////////////////////////////////////////////////////////////////////////////////////////////////
						pos++;//////Tabla sintactica
						pila.removeFirst();//////Tabla sintactica
						
					}else
					{
						if(tablaSint[x][y].charAt(0)=='P')//////Tabla sintactica
						{
							/*if(pilaT.getLast().equals("I52"))//I30
							{
								banAsig = false;
							}*/
							
							System.out.println("Prod");
							pos--;
							cantEliminar = Integer.parseInt(tablaSint[x][y].substring(1));//////Tabla sintactica
							for(z=0;z<prodTam[cantEliminar];z++)//////Tabla sintactica
								pilaT.removeLast();//////Tabla sintactica
							if(tablaSint[x][y].equals("P0"))//////Tabla sintactica
							{
								System.out.println("CADENA ACEPTADA->Resultado");
								codInter.Mostrar();
								obd.Println("///////////////////////////////////////////////");
								codInter.Datos(datos);
								this.mostrarPilas(codInter.Convertir());
								break;//////Tabla sintactica
							}
							pila.addFirst(producciones[cantEliminar]);//////Tabla sintactica
						}
					}
				}
				else//////Tabla sintactica
				{
					obd.Print("e1");
					this.Error(pos, "");//////Tabla sintactica
					break;//////Tabla sintactica
				}
			}else//////Tabla sintactica
			{	
				obd.Print("e2");
				this.Error(pos, "");//////Tabla sintactica
				break;//////Tabla sintactica
			}
		}
	}
	
	/*private LinkedList<String> EleAsig ()
	{
		LinkedList<String> pila = new LinkedList<String>();

		return pila;
	}*/
	
	private boolean Excepciones(String cad)
	{
		int zt;
		//Termina asignacion
		if(pilaT.getLast().equals("I30"))//I30
		{
			banAsig = false;
			if(val.Asignacion())//Comprueba la Asignacion
			{
				this.Error(pos+1, "Tipo de dato Erroneo en la asignacion");
				return true;
			}
			codInter.ListElemtos(val.orden());//Mandar la lista al codigo intermedio
		}
		//Empieza asignacion
		if(pilaT.getLast().equals("I17") || banAsig)
		{
			val.Datos(datos);
			banAsig = true;
			obd.Println("-->"+entrada.get(pos)+"<---");
			if(entrada.get(pos).equals(cad))
			{
				obd.Println("--------------Se manda----------------");//Se manda el valor ingresado por el usuario
				val.Elemento(entraUser.get(pos));
			}
			
		}
		else
			if(entrada.get(pos).equals(cad))
			{
				obd.Println("--------------Se manda2----------------");//se mandan los elementos al codigo intermedio
				codInter.Elemento(entraUser.get(pos));
			}
		
		if(pilaT.getLast().equals("I65"))
		{
			for(zt=0;zt<datos.size() && !datos.get(zt).getId().equals(entraUser.get(pos));zt++);
			if(zt<datos.size())
				if(!datos.get(zt).getTip().equals("0"))
				{
					this.Error(pos, "El identificador debe ser del tipo de dato Entero");
					return true;
				}
		}
		
		if(pilaT.getLast().equals("I85") || pilaT.getLast().equals("I86"))
		{
			if(tempCond.isBlank())
			{
				tempCond = entraUser.get(pos);
			}
			else
			{
				if(!tempCond.matches(expId))
				{
					if(!entraUser.get(pos).matches(expId))
					{
						this.Error(pos, "La condicion del While debe tener al menos una variable Numerica");
						tempCond="";
						return true;
					}
					else
					{
						for(zt=0;zt<datos.size() && !datos.get(zt).getId().equals(entraUser.get(pos));zt++);
						if(zt<datos.size())
							if(!datos.get(zt).getTip().equals("0") && !datos.get(zt).getTip().equals("1") && !datos.get(zt).getTip().equals("2"))
							{
								this.Error(pos, "La condicion del While debe tener al menos una variable Numerica");
								tempCond="";
								return true;
							}
					}
				}
				else
				{
					if(!entraUser.get(pos).matches(expId))
					{
						for(zt=0;zt<datos.size() && !datos.get(zt).getId().equals(tempCond);zt++);
						if(zt<datos.size())
							if(!datos.get(zt).getTip().equals("0") && !datos.get(zt).getTip().equals("1") && !datos.get(zt).getTip().equals("2"))
							{
								this.Error(pos, "La condicion del While debe tener al menos una variable Numerica");
								tempCond="";
								return true;
							}
					}
					else
					{
						if(!tempCond.equals(entraUser.get(pos)))
						{
							for(zt=0;zt<datos.size() && !datos.get(zt).getId().equals(tempCond);zt++);
							if(zt<datos.size())
								if(!datos.get(zt).getTip().equals("0") && !datos.get(zt).getTip().equals("1") && !datos.get(zt).getTip().equals("2"))
								{
									this.Error(pos, "La condicion del While no puede validar Cadenas");
									tempCond="";
									return true;
								}
								else
								{
									for(zt=0;zt<datos.size() && !datos.get(zt).getId().equals(entraUser.get(pos));zt++);
									if(zt<datos.size())
										if(!datos.get(zt).getTip().equals("0") && !datos.get(zt).getTip().equals("1") && !datos.get(zt).getTip().equals("2"))
										{
											this.Error(pos, "La condicion del While no puede validar Cadenas");
											tempCond="";
											return true;
										}
								}
						}
						else
						{
							this.Error(pos, "Estas Creando un Ciclo infinito o No usable");
							tempCond="";
							return true;
						}
						
					}
				}
				tempCond="";
			}
		}
		return false;
	}

	public LinkedList<String> Entrada(LinkedList<String> pila)
	{
		String temp="", tipod="", id="";
		boolean ban=false;
		int x;
		LinkedList<String> pilatrans = new LinkedList<String>();
		/////////////////////////////////////////////////////////////////////	
		for(int y=0; y<pila.size(); y++)
		{
			//obd.Println(pila.get(y));
			if(pila.get(y).equals("float") || pila.get(y).equals("int") || pila.get(y).equals("char")) {
				tipod=pila.get(y);
				ban=true;
				}
			else if(pila.get(y).matches(expId) && ban && tablaSimbolos.indexOf(pila.get(y))==-1) {
					id=pila.get(y);
					tablaSimbolos.add(tipod);
					tablaSimbolos.add(id);
				}
			else if(pila.get(y).matches(";")) {
				ban=false;
				id=tipod="";
			}
			for(x=0;x<terminales.length && !terminales[x].equals(pila.get(y)) ;x++);
			if(x<terminales.length)
			{
				if(pila.get(y).equals(";"))
					temp = "";
				for(x=0;x<Tipos.length && !Tipos[x].equals(pila.get(y)) ;x++);
					if(x<Tipos.length)
						temp = pila.get(y);
				pilatrans.add(pila.get(y));
			}
			else
				if(pila.get(y).matches(expId))
				{
					for(x=0;x<datos.size() && !datos.get(x).getId().equals(pila.get(y));x++);
					if(temp!="")
					{
						if(x<datos.size())
						{
							pilatrans.add("null1");
						}
						else
						{
							dat = new DatosIDS();
							dat.setId(pila.get(y));
							for(x=0;x<Tipos.length && !Tipos[x].equals(temp);x++);
							if(x<Tipos.length)
								dat.setTip(x+"");//se guarda el tipo con su valor numerico si quisieramos guardarlo con su valor en cadena usaremos temp
							datos.add(dat);
							dat = null;
							pilatrans.add("id");
						}
					}
					else
					{
						if(x<datos.size())
						{
							pilatrans.add("id");
						}
						else
						{
							pilatrans.add("null0");
						}
					}			
				}
				else
					if(pila.get(y).matches(expNum))
					{
						//pila.get(x).compareToIgnoreCase(expNum);
						pilatrans.add("num");
					}
					else
						if(pila.get(y).matches(expchar))
						{
							pilatrans.add("car");
						}
					else
						if(pila.get(y).matches(expcad))
						{
							pilatrans.add("cad");
						}
						else
							pilatrans.add("null");
		}
		pilatrans.add("$");
		this.mostrarPilas(pilatrans);
		entrada.addAll(pilatrans);//entrada es la pila modifica para usar la tabla sintactica
		return pilatrans;
		
	}
	
	public LinkedList<String> Separar(String txt)
	{
		txt+=" ";
		LinkedList<String> LisTemp = new LinkedList<String>();
		int temp;
		for(int x=0;x<txt.length();x++)
		{
			temp = txt.indexOf(" ",x);
			//obd.Println(temp+"");
			if(temp!=-1)
				if(!txt.substring(x,temp).isBlank())
					 LisTemp.add(txt.substring(x,x=temp));
		}
		entraUser.addAll(LisTemp);//Entrada user es la pila como la entro el usuario
		return LisTemp;
			
	}
	
	public void mostrarPilas(LinkedList<String> pila)
	{
		System.out.println("Mostrar");
		for(int x = 0; x<pila.size();x++)
			System.out.println(pila.get(x));
	}
	
	public void mostrarSimbolos()
	{
		System.out.println("TABLA SIMBOLOS");
		for(int x = 0; x<tablaSimbolos.size();x++) {
			System.out.print(tablaSimbolos.get(x)+"\t");
			if(x%2!=0)
				System.out.println();
		}
	}
	
	
	public static void main(String[] args)
	{
		Principal obp = new Principal();
		/*obp.Accion(obp.Entrada(obp.Separar("Programa name { int var , id2 ; float f ; var = ( 3 * 5 ) ; id2 = read ; print [ ~Hola~ + var ] ; switch [ var ] "
				+ "{ case 1 : var = 'X' ; break Default : var = 'Y' ; break } "
				+ "while [ id2 >= 5.01 ] { id2 = id2 + 1 ; } }")));*/
		/*obp.Accion(obp.Entrada(obp.Separar("Programa name { int var , var2 ; float f1 ;  var = ( 3 * 5 ) / 5 + 1 ; f1 = read ; print [ ~Hola~ + var ] ; switch [ var ]"
				+ " { case 1 : var = ( 4 * 5 ) ; break case 2 : var = 'Y' ; break Default : var = 'Z' ; break } while [ var == 1 ] { while [ var == 1 ] { var = var + 1 ; }  } while [ var == 1 ] { var = var + 1 ; }  }")));*/
		
		obp.Accion(obp.Entrada(obp.Separar("Programa name {  float var , var2 ; var =  4 + 10 * 5 ; }")));
		obp.mostrarSimbolos();
	}

}
